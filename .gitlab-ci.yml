image: node

stages:
  - cache
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production tests

cache:
  key: ${CI_COMMIT_REF_SLUG}
  policy: pull
  paths:
    - node_modules/

update cache:
  stage: cache
  only:
    - schedules
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    policy: push
    paths:
      - node_modules/
  script:
    - npm install

variables:
  
  STAGING_DOMAIN: bubblespot-staging.surge.sh
  PRODUCTION_DOMAIN: bubblespot.surge.sh

build website:
  stage: build
  only:
    - master
    - merge_requests
  before_script:
    - npm install
    - npm install -g gatsby-cli
  script:
    - echo $CI_COMMIT_SHORT_SHA
    - gatsby build
    - sed -i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      - ./public

test artifact:
  image: alpine
  stage: test
  only:
    - master
    - merge_requests
  cache: {}
  script:
    - grep -q "Gatsby" ./public/index.html

test website:
  stage: test
  only:
    - master
    - merge_requests
  before_script:
    - npm install
    - npm install -g gatsby-cli
  script:
    - gatsby serve &
    - sleep 3
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"

deploy review:
  stage: deploy review
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://bubblespot-$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: stop review
  only:
    - merge_requests
  before_script:
    - npm install -g surge
  script:
    - surge --project ./public --domain bubblespot-$CI_ENVIRONMENT_SLUG.surge.sh

stop review:
  stage: deploy review
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  only:
    - merge_requests
  before_script:
    - npm install -g surge
  script:
    - surge teardown bubblespot-$CI_ENVIRONMENT_SLUG.surge.sh
  when: manual

deploy staging:
  stage: deploy staging
  environment:
    name: staging
    url: http://$STAGING_DOMAIN
  only:
    - master
  cache: {}
  before_script:
    - npm install -g surge
  script:
    - surge --project ./public --domain $STAGING_DOMAIN

deploy production:
  stage: deploy production
  environment:
    name: production
    url: http://$PRODUCTION_DOMAIN
  only:
    - master
  #when: manual
  #allow_failure: false
  cache: {}
  before_script:
    - npm install -g surge
  script:
    - surge --project ./public --domain $PRODUCTION_DOMAIN
      
production tests:
  image: alpine
  stage: production tests
  only:
    - master
  cache: {}
  before_script:
    - apk add --no-cache curl
  script:
    - curl -s "http://$PRODUCTION_DOMAIN" | grep -q "Hi people"
    - curl -s "http://$PRODUCTION_DOMAIN" | grep -q "$CI_COMMIT_SHORT_SHA"
